// Generated by Dagger (https://dagger.dev).
package com.example.snapfoodtask.di;

import com.example.snapfoodtask.network.SWAPIService;
import com.example.snapfoodtask.repository.SWAPIRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideSWAPIRepositoryFactory implements Factory<SWAPIRepository> {
  private final Provider<SWAPIService> swapiServiceProvider;

  public AppModule_ProvideSWAPIRepositoryFactory(Provider<SWAPIService> swapiServiceProvider) {
    this.swapiServiceProvider = swapiServiceProvider;
  }

  @Override
  public SWAPIRepository get() {
    return provideSWAPIRepository(swapiServiceProvider.get());
  }

  public static AppModule_ProvideSWAPIRepositoryFactory create(
      Provider<SWAPIService> swapiServiceProvider) {
    return new AppModule_ProvideSWAPIRepositoryFactory(swapiServiceProvider);
  }

  public static SWAPIRepository provideSWAPIRepository(SWAPIService swapiService) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideSWAPIRepository(swapiService));
  }
}
